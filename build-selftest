#!/bin/bash
# SPDX-FileCopyrightText: 2023 Rivos Inc.
#
# SPDX-License-Identifier: Apache-2.0

set -euo pipefail

KCONFIG_REL_PATHS=("tools/testing/selftests/bpf/config" "tools/testing/selftests/bpf/config.aarch64")

cd /workspace
rm -rf /workspace/kbuild

local kernel_checkout="."
local kconfig_file="kbuild/.config"

rm -f "$kconfig_file" 2> /dev/null

for config in "${KCONFIG_REL_PATHS[@]}"; do
	local kconfig_src="${kernel_checkout}/${config}"
	cat "$kconfig_src" >> "$kconfig_file"
done

make -j $(($(nproc)-1)) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- O=/workspace/kbuild olddefconfig

make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- O=/workspace/kbuild -j $(($(nproc)-1))

mkdir -p /workspace/build
make -j $(($(nproc)-1)) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- O=/workspace/kbuild \
     INSTALL_PATH=/workspace/build install
make -j $(($(nproc)-1)) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- O=/workspace/kbuild INSTALL_MOD_STRIP=1 \
     INSTALL_MOD_PATH=/workspace/build modules_install || true

make -j $(($(nproc)-1)) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- O=/workspace/kbuild headers
make -j $(($(nproc)-1)) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- O=/workspace/kbuild -C tools/testing/selftests/bpf

if [[ -f /rootfs/lunar.tar ]]; then
    f=lunar.tar
else
    f=sid.tar
fi

tar cvf bpf.tar tools/testing/selftests/bpf

cp /rootfs/$f /workspace || true

tar --append -f /workspace/$f ./bpf.tar 

create_image.sh arm64-linux.img ./build ./$f

echo "Kernel selftest successfully built!"

