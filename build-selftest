#!/bin/bash
# SPDX-FileCopyrightText: 2023 Rivos Inc.
#
# SPDX-License-Identifier: Apache-2.0

set -euo pipefail

cd /workspace

cat <<EOF >tools/testing/selftests/riscv/config
CONFIG_DEBUG_CREDENTIALS=y
CONFIG_DEBUG_INFO_BTF=y
CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT=y
CONFIG_DEBUG_MEMORY_INIT=y
CONFIG_EXPERT=y
CONFIG_RUNTIME_TESTING_MENU=y # test bpf
CONFIG_TLS=y
CONFIG_IP_ROUTE_MULTIPATH=y
CONFIG_MACSEC=y
CONFIG_CRYPTO_CHACHA20POLY1305=y
CONFIG_CRYPTO_CHACHA20=y
CONFIG_CRYPTO_CCM=y
CONFIG_MACVTAP=y
CONFIG_L2TP=y
CONFIG_TEST_FPU=y
CONFIG_IPV6_SEG6_LWTUNNEL=y
CONFIG_XFRM_SUB_POLICY=y
CONFIG_XFRM_USER=y
CONFIG_OPENVSWITCH=m

# IOMMUFD
CONFIG_IOMMUFD=y
CONFIG_VFIO=y
CONFIG_VFIO_CONTAINER=n
CONFIG_IOMMUFD_VFIO_CONTAINER=y
CONFIG_FAULT_INJECTION=y
CONFIG_IOMMUFD_TEST=y
EOF

rm -rf /workspace/kbuild
make -j $(($(nproc)-1)) ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- O=/workspace/kbuild defconfig
make -j $(($(nproc)-1)) ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- O=/workspace/kbuild kselftest-merge
# You need to build the kernel for bpf...

make ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- O=/workspace/kbuild -j $(($(nproc)-1))

mkdir -p /workspace/build
make -j $(($(nproc)-1)) ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- O=/workspace/kbuild \
     INSTALL_PATH=/workspace/build install
make -j $(($(nproc)-1)) ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- O=/workspace/kbuild INSTALL_MOD_STRIP=1 \
     INSTALL_MOD_PATH=/workspace/build modules_install || true

make -j $(($(nproc)-1)) ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- O=/workspace/kbuild headers
make -j $(($(nproc)-1)) ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- O=/workspace/kbuild HOSTCC=gcc FORMAT= \
  SKIP_TARGETS="arm64 ia64 powerpc sparc64 x86 sgx" -C tools/testing/selftests gen_tar

if [[ -f /rootfs/lunar.tar ]]; then
    f=lunar.tar
else
    f=sid.tar
fi

cp /rootfs/$f /workspace || true
cd /workspace/kbuild/kselftest/kselftest_install/kselftest-packages/
tar --append -f /workspace/$f ./kselftest.tar

echo "Kernel selftest successfully built!"

